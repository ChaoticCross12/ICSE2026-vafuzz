{
    "cmdline":  "$inopts -f  $INPUTFILE",
    "connector": "=",
    "strmax":   3,
    "options":  [{"opt":     "-a",
                   "type":    "bool"},
                  {"opt":     "-f",
                   "type":    "bool"},
                  {"opt":     "-p",
                   "type":    "bool"},
                  {"opt":     "--private",
                   "type":    "choice",
                   "choices": ["header", "aout", "sections", "syms", "relocs", "lineno", "loader", "except", "typchk", "traceback", "toc", "ldinfo"]
                ,
                "connector": "="
            },
                  {"opt":     "-h",
                   "type":    "bool"},
                  {"opt":     "-x",
                   "type":    "bool"},
                  {"opt":     "-D",
                   "type":    "bool"},
                  {"opt":     "-S",
                   "type":    "bool"},
                  {"opt":     "-s",
                   "type":    "bool"},
                  {"opt":     "-g",
                   "type":    "bool"},
                  {"opt":     "-e",
                   "type":    "bool"},
                  {"opt":     "-G",
                   "type":    "bool"},
                  {"opt":     "--dwarf",
                   "type":    "choice",
                   "choices": ["rawline", "decodedline", "info", "abbrev", "aranges", "macro", "frames", "frames-interp", "str", "loc", "Ranges", "pubtypes", "trace_info", "trace_abbrev", "trace_aranges", "gdb_index", "addr", "cu_index", "links", "follow-links", "no-follow-links"]
                ,
                "connector": "="
            },

                  {"opt":     "-L",
                   "type":    "bool"},
                  {"opt":     "-t",
                   "type":    "bool"},
                  {"opt":     "-T",
                   "type":    "bool"},
                  {"opt":     "-r",
                   "type":    "bool"},
                  {"opt":     "-R",
                   "type":    "bool"},
                  {"opt":     "--target",
                   "type":    "choice",
                   "choices": ["elf64-x86-64", "elf32-bigaarch64", "elf32-littleaarch64", "elf64-bigaarch64", "elf64-bigaarch64-cloudabi", "elf64-littleaarch64", "elf64-littleaarch64-cloudabi", "mach-o-arm64", "ecoff-littlealpha", "elf64-alpha", "elf64-alpha-freebsd", "vms-alpha", "vms-libtxt", "elf32-am33lin", "elf32-bigarc", "elf32-littlearc", "elf32-bigarm", "elf32-littlearm", "elf32-bigarm-fdpic", "elf32-littlearm-fdpic", "elf32-bigarm-vxworks", "elf32-littlearm-vxworks", "mach-o-arm", "pe-arm-big", "pe-arm-little", "pe-arm-wince-big", "pe-arm-wince-little", "pei-arm-big", "pei-arm-little", "pei-arm-wince-big", "pei-arm-wince-little", "elf32-avr", "elf32-bfin", "elf32-bfinfdpic", "elf32-cr16", "a.out-cris", "elf32-cris", "elf32-us-cris", "elf32-crx", "elf32-csky-big", "elf32-csky-little", "elf32-d10v", "elf32-d30v", "elf32-dlx", "elf32-big", "elf32-little", "elf64-big", "elf64-little", "elf32-epiphany", "elf32-fr30", "elf32-frv", "elf32-frvfdpic", "elf32-h8300", "elf32-h8300-linux", "elf32-hppa", "elf32-hppa-linux", "elf32-hppa-netbsd", "elf64-hppa", "elf64-hppa-linux", "som", "a.out-i386", "a.out-i386-bsd", "a.out-i386-lynx", "coff-i386", "coff-go32", "coff-go32-exe", "coff-i386-lynx", "elf32-i386", "elf32-i386-freebsd", "elf32-i386-sol2", "elf32-i386-vxworks", "mach-o-i386", "msdos", "pe-i386", "pe-bigobj-i386", "pei-i386", "elf32-iamcu", "elf64-bpfbe", "elf64-bpfle", "elf32-ia64-hpux-big", "elf64-ia64-big", "elf64-ia64-little", "elf64-ia64-hpux-big", "elf64-ia64-vms", "pei-ia64", "elf32-ip2k", "elf32-iq2000", "elf64-k1om", "elf64-k1om-freebsd", "elf64-l1om", "elf64-l1om-freebsd", "elf32-lm32", "elf32-m32c", "elf32-m32r", "elf32-m32rle", "elf32-m32r-linux", "elf32-m32rle-linux", "elf32-m68hc11", "elf32-m68hc12", "elf32-m68k", "elf32-s12z", "mach-o-be", "mach-o-le", "mach-o-fat", "elf32-mcore-big", "elf32-mcore-little", "pe-mcore-big", "pe-mcore-little", "pei-mcore-big", "pei-mcore-little", "elf32-mep", "elf32-metag", "elf32-microblaze", "ecoff-bigmips", "ecoff-littlemips", "ecoff-biglittlemips", "elf32-bigmips", "elf32-littlemips", "elf32-nbigmips", "elf32-nlittlemips", "elf32-ntradbigmips", "elf32-ntradlittlemips", "elf32-ntradbigmips-freebsd", "elf32-ntradlittlemips-freebsd", "elf32-tradbigmips", "elf32-tradlittlemips", "elf32-tradbigmips-freebsd", "elf32-tradlittlemips-freebsd", "elf32-bigmips-vxworks", "elf32-littlemips-vxworks", "elf64-bigmips", "elf64-littlemips", "elf64-tradbigmips", "elf64-tradlittlemips", "elf64-tradbigmips-freebsd", "elf64-tradlittlemips-freebsd", "elf64-mmix", "mmo", "elf32-mn10200", "elf32-mn10300", "elf32-bigmoxie", "elf32-littlemoxie", "elf32-msp430", "elf32-mt", "elf32-nds32be", "elf32-nds32le", "elf32-nds32be-linux", "elf32-nds32le-linux", "elf64-nfp", "elf32-bignios2", "elf32-littlenios2", "a.out-pc532-mach", "a.out-ns32k-netbsd", "elf32-or1k", "a.out-pdp11", "pef", "pef-xlib", "elf32-pj", "elf32-pjl", "ppcboot", "elf32-powerpc", "elf32-powerpcle", "elf32-powerpc-freebsd", "elf32-powerpc-vxworks", "elf64-powerpc", "elf64-powerpcle", "elf64-powerpc-freebsd", "elf64-powerpcle-freebsd", "elf32-pru", "elf32-littleriscv", "elf64-littleriscv", "elf32-bigriscv", "elf64-bigriscv", "elf32-rl78", "aixcoff64-rs6000", "aix5coff64-rs6000", "aixcoff-rs6000", "elf32-rx-be", "elf32-rx-be-ns", "elf32-rx-le", "elf32-s390", "elf64-s390", "elf32-bigscore", "elf32-littlescore", "coff-sh", "coff-shl", "coff-sh-small", "coff-shl-small", "elf32-sh", "elf32-shl", "elf32-shbig-fdpic", "elf32-sh-fdpic", "elf32-sh-linux", "elf32-shbig-linux", "elf32-sh-nbsd", "elf32-shl-nbsd", "elf32-sh-vxworks", "elf32-shl-vxworks", "pe-shl", "pei-shl", "elf32-sparc", "elf32-sparc-sol2", "elf32-sparc-vxworks", "elf64-sparc", "elf64-sparc-freebsd", "elf64-sparc-sol2", "elf32-spu", "sym", "coff-tic30", "coff0-beh-c54x", "coff0-c54x", "coff1-beh-c54x", "coff1-c54x", "coff2-beh-c54x", "coff2-c54x", "elf32-tic6x-be", "elf32-tic6x-le", "elf32-tilegx-be", "elf32-tilegx-le", "elf64-tilegx-be", "elf64-tilegx-le", "elf32-tilepro", "elf32-ft32", "elf32-v850-rh850", "elf32-v850", "a.out-vax1k-netbsd", "a.out-vax-netbsd", "elf32-vax", "elf32-visium", "wasm", "elf32-wasm32", "coff-x86-64", "elf32-x86-64", "elf64-x86-64-cloudabi", "elf64-x86-64-freebsd", "elf64-x86-64-sol2", "mach-o-x86-64", "pe-x86-64", "pe-bigobj-x86-64", "pei-x86-64", "elf32-xc16x", "elf32-xgate", "elf32-xstormy16", "elf32-xtensa-be", "elf32-xtensa-le", "coff-z80", "elf32-z80", "coff-z8k", "srec", "symbolsrec", "verilog", "tekhex", "binary", "ihex", "plugin"],
                "connector": "="
            },
                  {"opt":     "--architecture",
                   "type":    "choice",
                   "choices": ["aarch64", "aarch64:ilp32", "aarch64:armv8-r", "alpha", "alpha:ev4", "alpha:ev5", "alpha:ev6", "ARC600", "A6", "ARC601", "ARC700", "A7", "ARCv2", "EM", "HS", "arm", "armv2", "armv2a", "armv3", "armv3m", "armv4", "armv4t", "armv5", "armv5t", "armv5te", "xscale", "ep9312", "iwmmxt", "iwmmxt2", "armv5tej", "armv6", "armv6kz", "armv6t2", "armv6k", "armv7", "armv6-m", "armv6s-m", "armv7e-m", "armv8-a", "armv8-r", "armv8-m.base", "armv8-m.main", "armv8.1-m.main", "arm_any", "avr", "avr:1", "avr:2", "avr:25", "avr:3", "avr:31", "avr:35", "avr:4", "avr:5", "avr:51", "avr:6", "avr:100", "avr:101", "avr:102", "avr:103", "avr:104", "avr:105", "avr:106", "avr:107", "bfin", "cr16", "cris", "crisv32", "cris:common_v10_v32", "crx", "csky", "csky:ck510", "csky:ck610", "csky:ck801", "csky:ck802", "csky:ck803", "csky:ck807", "csky:ck810", "csky:ck860", "csky:any", "d10v", "d10v:ts2", "d10v:ts3", "d30v", "dlx", "bpf", "xbpf", "epiphany32", "epiphany16", "fr30", "frv", "tomcat", "simple", "fr550", "fr500", "fr450", "fr400", "fr300", "h8300", "h8300h", "h8300s", "h8300hn", "h8300sn", "h8300sx", "h8300sxn", "hppa1.1", "hppa2.0w", "hppa2.0", "hppa1.0", "i386", "i386:x86-64", "i386:x64-32", "i8086", "i386:intel", "i386:x86-64:intel", "i386:x64-32:intel", "iamcu", "iamcu:intel", "ia64-elf64", "ia64-elf32", "ip2022ext", "ip2022", "iq2000", "iq10", "k1om", "k1om:intel", "l1om", "l1om:intel", "lm32", "m16c", "m32c", "m32r", "m32rx", "m32r2", "m68hc11", "m68hc12", "m68hc12:HCS12", "m9s12x", "m9s12xg", "s12z", "m68k", "m68k:68000", "m68k:68008", "m68k:68010", "m68k:68020", "m68k:68030", "m68k:68040", "m68k:68060", "m68k:cpu32", "m68k:fido", "m68k:isa-a:nodiv", "m68k:isa-a", "m68k:isa-a:mac", "m68k:isa-a:emac", "m68k:isa-aplus", "m68k:isa-aplus:mac", "m68k:isa-aplus:emac", "m68k:isa-b:nousp", "m68k:isa-b:nousp:mac", "m68k:isa-b:nousp:emac", "m68k:isa-b", "m68k:isa-b:mac", "m68k:isa-b:emac", "m68k:isa-b:float", "m68k:isa-b:float:mac", "m68k:isa-b:float:emac", "m68k:isa-c", "m68k:isa-c:mac", "m68k:isa-c:emac", "m68k:isa-c:nodiv", "m68k:isa-c:nodiv:mac", "m68k:isa-c:nodiv:emac", "m68k:5200", "m68k:5206e", "m68k:5307", "m68k:5407", "m68k:528x", "m68k:521x", "m68k:5249", "m68k:547x", "m68k:548x", "m68k:cfv4e", "MCore", "mep", "h1", "c5", "metag", "MicroBlaze", "mips", "mips:3000", "mips:3900", "mips:4000", "mips:4010", "mips:4100", "mips:4111", "mips:4120", "mips:4300", "mips:4400", "mips:4600", "mips:4650", "mips:5000", "mips:5400", "mips:5500", "mips:5900", "mips:6000", "mips:7000", "mips:8000", "mips:9000", "mips:10000", "mips:12000", "mips:14000", "mips:16000", "mips:16", "mips:mips5", "mips:isa32", "mips:isa32r2", "mips:isa32r3", "mips:isa32r5", "mips:isa32r6", "mips:isa64", "mips:isa64r2", "mips:isa64r3", "mips:isa64r5", "mips:isa64r6", "mips:sb1", "mips:loongson_2e", "mips:loongson_2f", "mips:gs464", "mips:gs464e", "mips:gs264e", "mips:octeon", "mips:octeon+", "mips:octeon2", "mips:octeon3", "mips:xlr", "mips:interaptiv-mr2", "mips:micromips", "mmix", "mn10200", "mn10300", "am33", "am33-2", "moxie", "ft32", "ft32b", "msp:14", "MSP430", "MSP430x11x1", "MSP430x12", "MSP430x13", "MSP430x14", "MSP430x15", "MSP430x16", "MSP430x20", "MSP430x21", "MSP430x22", "MSP430x23", "MSP430x24", "MSP430x26", "MSP430x31", "MSP430x32", "MSP430x33", "MSP430x41", "MSP430x42", "MSP430x43", "MSP430x44", "MSP430x46", "MSP430x47", "MSP430x54", "MSP430X", "ms1", "ms1-003", "ms2", "n1h", "n1h_v2", "n1h_v3", "n1h_v3m", "NFP-6xxx", "NFP-32xx", "nios2", "nios2:r1", "nios2:r2", "ns32k:32032", "ns32k:32532", "or1k", "or1knd", "pdp11", "powerpc:common64", "powerpc:common", "powerpc:603", "powerpc:EC603e", "powerpc:604", "powerpc:403", "powerpc:601", "powerpc:620", "powerpc:630", "powerpc:a35", "powerpc:rs64ii", "powerpc:rs64iii", "powerpc:7400", "powerpc:e500", "powerpc:e500mc", "powerpc:e500mc64", "powerpc:MPC8XX", "powerpc:750", "powerpc:titan", "powerpc:vle", "powerpc:e5500", "powerpc:e6500", "pru", "riscv", "riscv:rv64", "riscv:rv32", "rl78", "rs6000:6000", "rs6000:rs1", "rs6000:rsc", "rs6000:rs2", "rx", "rx:v2", "rx:v3", "s390:64-bit", "s390:31-bit", "score7", "score3", "sh", "sh2", "sh2e", "sh-dsp", "sh3", "sh3-nommu", "sh3-dsp", "sh3e", "sh4", "sh4a", "sh4al-dsp", "sh4-nofpu", "sh4-nommu-nofpu", "sh4a-nofpu", "sh2a", "sh2a-nofpu", "sh2a-nofpu-or-sh4-nommu-nofpu", "sh2a-nofpu-or-sh3-nommu", "sh2a-or-sh4", "sh2a-or-sh3e", "sparc", "sparc:sparclet", "sparc:sparclite", "sparc:v8plus", "sparc:v8plusa", "sparc:sparclite_le", "sparc:v9", "sparc:v9a", "sparc:v8plusb", "sparc:v9b", "sparc:v8plusc", "sparc:v9c", "sparc:v8plusd", "sparc:v9d", "sparc:v8pluse", "sparc:v9e", "sparc:v8plusv", "sparc:v9v", "sparc:v8plusm", "sparc:v9m", "sparc:v8plusm8", "sparc:v9m8", "spu:256K", "tms320c30", "tms320c4x", "tms320c3x", "tms320c54x", "tic6x", "tilegx", "tilegx32", "tilepro", "v850:old-gcc-abi", "v850e3v5:old-gcc-abi", "v850e2v4:old-gcc-abi", "v850e2v3:old-gcc-abi", "v850e2:old-gcc-abi", "v850e1:old-gcc-abi", "v850e:old-gcc-abi", "v850:rh850", "v850e3v5", "v850e2v4", "v850e2v3", "v850e2", "v850e1", "v850e", "v850-rh850", "vax", "visium", "wasm32", "xstormy16", "xtensa", "xc16x", "xc16xl", "xc16xs", "xgate", "z80", "z80-strict", "z80-full", "r800", "gbz80", "z180", "z80n", "ez80-z80", "ez80-adl", "z8001", "z8002"],
                "connector": "="},
                  {"opt":     "--endian",
                   "type":    "choice",
                   "choices": ["big", "little"],
                "connector": "="},
                  {"opt":     "--file-start-context",
                   "type":    "bool"},
                  {"opt":     "-l",
                   "type":    "bool"},
                  {"opt":     "-F",
                   "type":    "bool"},
                  {"opt":     "--demangle",
                   "type":    "choice",
                   "choices": ["none", "auto", "gnu-v3", "java", "gnat", "dlang", "rust"],
                "connector": "="},
                  {"opt":     "--recurse-limit",
                   "type":    "bool"},
                  {"opt":     "--no-recurse-limit",
                   "type":    "bool"},
                  {"opt":     "-w",
                   "type":    "bool"},
                  {"opt":     "-z",
                   "type":    "bool"},
                  {"opt":     "--no-addresses",
                   "type":    "bool"},
                  {"opt":     "--prefix-addresses",
                   "type":    "bool"},
                  {"opt":     "--show-raw-insn",
                   "type":    "bool"},
                  {"opt":     "--no-show-raw-insn",
                   "type":    "bool"},
                  {"opt":     "--insn-width",
                   "type":    "intnum",
                   "range":  [1,2147483647],
                "connector": "="},
                  {"opt":     "--adjust-vma",
                   "type":    "intnum",
                   "range":  [1,2147483647],
                "connector": "="},
                  {"opt":     "--special-syms",
                   "type":    "bool"},
                  {"opt":     "--inline",
                   "type":    "bool"},
                  {"opt":     "--prefix-strip",
                   "type":    "intnum",
                   "range":  [1,2147483647],
                "connector": "="},
                  {"opt":     "--dwarf-depth",
                   "type":    "intnum",
                   "range":  [1,2147483647],
                "connector": "="},
                  {"opt":     "--dwarf-start",
                   "type":    "intnum",
                   "range":  [1,2147483647],
                "connector": "="},
                  {"opt":     "--dwarf-check",
                   "type":    "bool"},
                  {"opt":     "--visualize-jumps",
                   "type":    "bool"}
                  ],
     "depend":   [
                 ],
     "conflict": [["--recurse-limit", "--no-recurse-limit"]
                 ],
     "maxcombs": 3
}

